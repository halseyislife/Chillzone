

void ParameterPrep() playervar "Parameter Prep"
{
    paramIndex = 0;
    currParam = argCollection[paramIndex];
    SetupParameter(currParam);
    stringCMD = null;
}

void SetupParameter(define input !) playervar "Setup Param Selection"
{
    switch (input)
    {
        case "Player": {
            selectedIndex = 0;
            if (ArrayContains(["Spin Player", "Spawn Lock Player", "Communicate Player", "Set Player's Status", "Kill Player", "Clear Player's Status", "Heal Player", "Damage Player", "Set Player Ability Cooldown", "Reverse Player Controls", "Set Player Max HP", "Set Player Ultimate Charge", "Blind Player", "Jail Player", "Set Player Damage Power"], selectedCMD)) arrayCollection = Append(Append(Append(AllPlayers(), "All"), "Others"), "Regulars");
            else if(ArrayContains(["Bring Player", "Toggle Menu Access"], selectedCMD)) arrayCollection = Append(Append(RemoveFromArray(AllPlayers(), EventPlayer()), "Others"), "Regulars");
            else arrayCollection = AllPlayers();
            if (ReturnBool("Admin Orb", EventPlayer())) arrayCollection = Append(arrayCollection, "Admin Orb Target");
            selectionString = <"<0> Selection for <1>", input, selectedCMD>;
            tempStrings[1] = " ";
            numArg = " ";
            PageSetup(arrayCollection);
            break;
        }
        case "Num": {
            selectedIndex = 0;
            numArg = 1;
            arrayCollection = null;
            arrayCollection[0] = " ";
            selectionString = <"Select a numerical value below">;
            numMin = ReturnGuides()[0];
            numMax = ReturnGuides()[1];
            tempStrings[1] = <"Select a number for <0>:", selectedCMD>;
            numArg = numMin;
            break;
        }
        case "Array": {
            selectedIndex = 0;
            arrayCollection = ReturnGuides();
            selectionString = <"Items Selection">;
            tempStrings[1] = " ";
            numArg = " ";
            PageSetup(arrayCollection);
            break;
        }
        case "Bool":
        {
            selectedIndex = 0;
            arrayCollection = ["On", "Off"];
            selectionString = <"On/Off Selection">;
            tempStrings[1] = " ";
            numArg = " ";
            PageSetup(arrayCollection);
            break;
        }
    }
    AbortIf(!((selectedCMD == "Add Admin") || (selectedCMD == "Remove Admin")));
    //reeval arrays
    switch (selectedCMD)
    {
        case "Add Admin": {
            if (arrayCollection == "ReevalArray1")
                {
                    arrayCollection = FilteredArray(AllPlayers(), ArrayElement().role == "User");
                }
        }
        case "Remove Admin": {
            if (arrayCollection == "ReevalArray1")
                {
                    arrayCollection = FilteredArray(AllPlayers(), ArrayElement().role == "Admin");
                }
        }
    }
    PageSetup(arrayCollection);
}


void NextParameter(define input !) "NextParam"
{
    if (input == "All" || input == "Others" || input == "Regulars")
    {
        argCollection[paramIndex] = ReturnGroup(input);
    }
    else argCollection[paramIndex] = input;
    if (currParam == "Array" || currParam == "Num")
    {
        paramIndex += 2;
    }
    else paramIndex += 1;
   currParam = argCollection[paramIndex];
   SetupParameter(currParam);
}




define ReturnParameters(define cmd !): FilteredArray(paramReturn, ArrayElement()[0] == cmd)[0][1];

define ReturnGroup(define group !): [AllPlayers(), RemoveFromArray(AllPlayers(), EventPlayer()), FilteredArray(AllPlayers(), ArrayElement().role == "User")][IndexOfArrayValue(["All", "Others", "Regulars"], group)];
define ParamComplete(define cmd !, define paramArray !): ((CountOf(FilteredArray(cmd, ArrayContains(keyWords, ArrayElement()))) == 0) &&(CountOf(FilteredArray(paramArray, ArrayContains(keyWords, ArrayElement()))) == 0) && (CountOf(ReturnParameters(cmd)) == CountOf(paramArray)));

define ReturnGuides(): argCollection[paramIndex + 1];
